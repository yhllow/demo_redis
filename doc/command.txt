http://www.runoob.com/redis/sorted-sets-zinterstore.html
https://redis.io/commands 命令行说明

1、字符串操作
	set hello world--将键hello的值设置为world
	get hello
	del hello
2、列表：可以有相同元素
	rpush name zhang--将给定值退入列表右端，返回当前列表长度
	rpush name chen
	rpush name zhao
	rpush name wang
	rpush name lili
	lrange name 0 -1--获取列表在给定范围上的所有值，从0开始，-1结束表示返回所有值
	lindex name 2--返回位置上的单个元素
	lpop name--从列表左端弹出一个值，并返回弹出的值
3、集合：无序，不能有相同元素
	sadd sname zhang--将给定元素添加到集合，成功返回1，返回0表示元素已存在
	sadd sname chen
	sadd sname lili
	sadd sname zhao
	sadd sname wang
	smembers sname--返回集合中的所有元素，当元素很多时慎用
	sismember sname zhang--返回指定元素是否存在于集合
	srem sname zhang--如果存在指定元素，则删除该元素
	spop sname--删除一个随机元素，并将它返回给客户端
4、散列
	hset member name zhang--在散列里面关联给定的键值对
	hset member age 33
	hset member sex male
	hget member name
	hgetall member
	hdel member name
	hincrby member birthdayyear 10 在生日年份上加10
5、有序集合：和散列一样，也是存储键值对，但键被称为成员，每个成员是独一无二的，值被称为分值，分值必须是浮点数。
	zadd zmember 728 zhang--728分值，zhang是成员，返回新添加元素的数量
	zadd zmember 900 lili 899 wangwu
	zadd zmember 829 wang
	zrange zmember 0 -1 withscores--会按分值大小进行排序
	zrange zmember 0 -1
	zrem zmember zhang--删除成员，返回删除成员的数量
	zscore zmember zhang 获取zhang的分值
	zcard zmember 获取zmember的成员个数
	zremrangebyrank(zremrangebyscore按分数删除)命令删除有序集合保存在key开始和结束的排序所有元素。无论是开始和结束都以0基础索引，其中0是得分最低的元素。这些索引可以是负数，在那里它们表明起始于具有最高得分的元素偏移。例如：-1是具有最高得分的元素，-2与第二最高得分等的元素。
	zadd myzset 1 b 2 c 3 d 4 e
	(integer) 4
	zremrangebyrank myzset 0 2 按照范围进行删除
	(integer) 3
	zrange myzset 0 -1 withscores 带有withscores那么结果会显示分数
	1) "e"
	2) "4"
	zrevrange myzset 0 -1 withscores 从大到小的排名
	zrangebyscore myzset 90 100 withscores 按分数范围显示
	zrangebyscore myzset 90 100 withscores limit 0 2 按分数范围显示，限制显示两个
	zincrby myzset 3 b 给b的分数加3
	zcount myzset 80 90 显示80到90分之间的元素个数

三、常用命令
	Redis有一系列的命令，特点是以NX结尾，NX是Not eXists的缩写，如SETNX命令就应该理解为：SET if Not eXists。
    1）连接操作命令
    quit：关闭连接（connection）
    auth：简单密码认证
    help cmd： 查看cmd帮助，例如：help quit

    2）持久化
    save：将数据同步保存到磁盘
    bgsave：将数据异步保存到磁盘
    lastsave：返回上次成功将数据保存到磁盘的Unix时戳
    shundown：将数据同步保存到磁盘，然后关闭服务

    3）远程服务控制
    info：提供服务器的信息和统计
    monitor：实时转储收到的请求
    slaveof：改变复制策略设置
    config：在运行时配置Redis服务器

    4）对value操作的命令
    exists(key)：确认一个key是否存在，存在1，不存在0
    del(key)：删除一个key
    type(key)：返回值的类型
    keys(pattern)：返回满足给定pattern的所有key
    randomkey：随机返回key空间的一个
    keyrename(oldname, newname)：重命名key
    dbsize：返回当前数据库中key的数目
    expire(key, second)：设定一个key的活动时间（s）
    ttl(key)：获得一个key的活动时间，-1一直有效
    select(index)：按索引查询
    move(key, dbindex)：移动当前数据库中的key到dbindex数据库
    flushdb：删除当前选择数据库中的所有key
    flushall：删除所有数据库中的所有key

    5）String
    set(key, value)：给数据库中名称为key的string赋予值value
    get(key)：返回数据库中名称为key的string的value
    getset(key, value)：给名称为key的string赋予上一次的value
    mget(key1, key2,…, key N)：返回库中多个string的value
    setnx(key, value)：添加string，名称为key，值为value
    setex(key, time, value)：向库中添加string，设定过期时间time
    mset(key N, value N)：批量设置多个string的值
    msetnx(key N, value N)：如果所有名称为key i的string都不存在
    incr(key)：名称为key的string增1操作
    incrby(key, integer)：名称为key的string增加integer
    decr(key)：名称为key的string减1操作
    decrby(key, integer)：名称为key的string减少integer
    append(key, value)：名称为key的string的值附加value
    substr(key, start, end)：返回名称为key的string的value的子串
    strlen(key)：获取值长度

    6）List
    rpush(key, value[, values...])：在名称为key的list尾添加一个值为value的元素
    lpush(key, value[, values...])：在名称为key的list头添加一个值为value的 元素
    lpushx(key, value)：当指定的key存在时，在名称为key的list头添加一个值为value的 元素
    llen(key)：返回名称为key的list的长度
    lrange(key, start, end)：返回名称为key的list中start至end之间的元素，end可以是负数
    ltrim(key, start, end)：截取名称为key的list，end可以是负数
    lindex(key, index)：返回名称为key的list中index位置的元素
    lset(key, index, value)：给名称为key的list中index位置的元素赋值，index=0代表第一个元素
    lrem(key, count, value)：删除count个key的list中值为value的元素，如果count为负数，表示从后往前删除count个元素，count为0表示删除所有value元素
    lpop(key)：返回并删除名称为key的list中的首元素
    linsert key after|before value1 value2：在名称为key的list的value1值后|前插入value2
    rpop(key)：返回并删除名称为key的list中的尾元素
    blpop(key1, key2,… key N, timeout)：lpop命令的block版本。
    brpop(key1, key2,… key N, timeout)：rpop的block版本。
    rpoplpush(srckey, dstkey)：返回并删除名称为srckey的list的尾元素，并将该元素添加到名称为dstkey的list的头部

    7）Set
    sadd(key, member)：向名称为key的set中添加元素member
    srem(key, member) ：删除名称为key的set中的元素member
    spop(key) ：随机返回并删除名称为key的set中一个元素
    smove(srckey, dstkey, member) ：移到集合元素
    scard(key) ：返回名称为key的set的元素个数
    sismember(key, member) ：member是否是名称为key的set的元素
    sinter(key1, key2,…key N) ：求交集
    sinterstore(dstkey, (keys)) ：求交集并将交集保存到dstkey的集合
    sunion(key1, (keys)) ：求并集
    sunionstore(dstkey, (keys)) ：求并集并将并集保存到dstkey的集合
    sdiff(key1, (keys)) ：求差集
    sdiffstore(dstkey, (keys)) ：求差集并将差集保存到dstkey的集合
    smembers(key) ：返回名称为key的set的所有元素
    srandmember(key) ：随机返回名称为key的set的一个元素

    8）Hash
    hset(key, field, value)：向名称为key的hash中添加元素field
    hget(key, field)：返回名称为key的hash中field对应的value
    hmget(key, (fields))：返回名称为key的hash中field i对应的value
    hmset(key, (fields))：向名称为key的hash中添加元素field
    hincrby(key, field, integer)：将名称为key的hash中field的value增加integer
    hexists(key, field)：名称为key的hash中是否存在键为field的域，存在1，不存在0
    hdel(key, field)：删除名称为key的hash中键为field的域
    hlen(key)：返回名称为key的hash中元素个数
    hkeys(key)：返回名称为key的hash中所有键
    hvals(key)：返回名称为key的hash中所有键对应的value
    hgetall(key)：返回名称为key的hash中所有的键（field）及其对应的value
    hstrlen(key, field)：该功能可能已经取消了，获取hash里面指定field的长度